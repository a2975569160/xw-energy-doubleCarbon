{"version":3,"file":"FeCreateFlightLine.js","sources":["../../../../Source/WorkersES6/FeCreateFlightLine.js"],"sourcesContent":["import createTaskProcessorWorker from \"./createTaskProcessorWorker.js\";\r\n\r\nfunction clampBetween(v, min, max) {\r\n  if (v <= min)\r\n    v = min;\r\n\r\n  if (v >= max)\r\n    v = max;\r\n\r\n  return v;\r\n}\r\n\r\nfunction equivalent(a, b) {\r\n  if (Math.abs(a - b) < 0.00001)\r\n    return true;\r\n  else\r\n    return false;\r\n}\r\n\r\nfunction toRadians(d) {\r\n  return d * (Math.PI / 180.0);\r\n}\r\n\r\nfunction magnitude(cartesian) {\r\n  return Math.sqrt(cartesian.x * cartesian.x + cartesian.y * cartesian.y + cartesian.z * cartesian.z);\r\n}\r\n\r\nfunction normalize(cartesian, result) {\r\n  var mag = magnitude(cartesian);\r\n\r\n  result.x = cartesian.x / mag;\r\n  result.y = cartesian.y / mag;\r\n  result.z = cartesian.z / mag;\r\n}\r\n\r\nfunction multiplyComponents(left, right, result) {\r\n  result.x = left.x * right.x;\r\n  result.y = left.y * right.y;\r\n  result.z = left.z * right.z;\r\n}\r\n\r\nfunction dot(left, right) {\r\n  return left.x * right.x + left.y * right.y + left.z * right.z;\r\n}\r\n\r\nfunction divideByScalar(cartesian, scalar, result) {\r\n  result.x = cartesian.x / scalar;\r\n  result.y = cartesian.y / scalar;\r\n  result.z = cartesian.z / scalar;\r\n  return result;\r\n};\r\n\r\nfunction multiplyByScalar(cartesian, scalar, result) {\r\n  result.x = cartesian.x * scalar;\r\n  result.y = cartesian.y * scalar;\r\n  result.z = cartesian.z * scalar;\r\n  return result;\r\n};\r\n\r\nfunction add(left, right, result) {\r\n  result.x = left.x + right.x;\r\n  result.y = left.y + right.y;\r\n  result.z = left.z + right.z;\r\n  return result;\r\n};\r\n\r\nfunction subtract(left, right, result) {\r\n  result.x = left.x - right.x;\r\n  result.y = left.y - right.y;\r\n  result.z = left.z - right.z;\r\n  return result;\r\n}\r\n\r\nfunction cross(left, right, result) {\r\n\r\n  var leftX = left.x;\r\n  var leftY = left.y;\r\n  var leftZ = left.z;\r\n  var rightX = right.x;\r\n  var rightY = right.y;\r\n  var rightZ = right.z;\r\n\r\n  var x = leftY * rightZ - leftZ * rightY;\r\n  var y = leftZ * rightX - leftX * rightZ;\r\n  var z = leftX * rightY - leftY * rightX;\r\n\r\n  result.x = x;\r\n  result.y = y;\r\n  result.z = z;\r\n  return result;\r\n};\r\n\r\nfunction clone(left, result) {\r\n  result.x = left.x;\r\n  result.y = left.y;\r\n  result.z = left.z;\r\n  return result;\r\n}\r\n\r\nfunction negate(left, result) {\r\n  result.x = -left.x;\r\n  result.y = -left.y;\r\n  result.z = -left.z;\r\n  return result;\r\n}\r\n\r\nfunction magnitudeSquared(cartesian) {\r\n  return cartesian.x * cartesian.x + cartesian.y * cartesian.y + cartesian.z * cartesian.z;\r\n};\r\n\r\nfunction checkPointVisible(primitive, pos) {\r\n  if (magnitudeSquared(pos) < 1)\r\n    return false;\r\n\r\n  var posDir = new Object();\r\n  posDir.x = pos.x;\r\n  posDir.y = pos.y;\r\n  posDir.z = pos.z;\r\n  normalize(posDir, posDir);\r\n\r\n  var camDir = new Object();\r\n  camDir.x = primitive._camPosition.x;\r\n  camDir.y = primitive._camPosition.y;\r\n  camDir.z = primitive._camPosition.z;\r\n  normalize(camDir, camDir);\r\n\r\n  var d = dot(posDir, camDir);\r\n  d = clampBetween(d, -1, 1);\r\n\r\n  var angle = Math.acos(d);\r\n\r\n  if (angle > primitive._visibleAngle)\r\n    return false;\r\n  else\r\n    return true;\r\n}\r\n\r\nfunction LLHToCartesian(lon, lat, height) {\r\n  var cartographic = new Object();\r\n  cartographic.longitude = lon * Math.PI / 180.0;\r\n  cartographic.latitude = lat * Math.PI / 180.0;\r\n  cartographic.height = height;\r\n\r\n  return cartographicToCartesian(cartographic);\r\n}\r\n\r\nfunction fromTranslation(cartesian, result) {\r\n  result[0] = 1.0;\r\n  result[1] = 0.0;\r\n  result[2] = 0.0;\r\n  result[3] = 0.0;\r\n  result[4] = 0.0;\r\n  result[5] = 1.0;\r\n  result[6] = 0.0;\r\n  result[7] = 0.0;\r\n  result[8] = 0.0;\r\n  result[9] = 0.0;\r\n  result[10] = 1.0;\r\n  result[11] = 0.0;\r\n  result[12] = cartesian.x;\r\n  result[13] = cartesian.y;\r\n  result[14] = cartesian.z;\r\n  result[15] = 1.0;\r\n  return result;\r\n}\r\n\r\nfunction multiplyByVector(matrix, cartesian, result) {\r\n  var vX = cartesian.x;\r\n  var vY = cartesian.y;\r\n  var vZ = cartesian.z;\r\n  var vW = cartesian.w;\r\n\r\n  var x = matrix[0] * vX + matrix[4] * vY + matrix[8] * vZ + matrix[12] * vW;\r\n  var y = matrix[1] * vX + matrix[5] * vY + matrix[9] * vZ + matrix[13] * vW;\r\n  var z = matrix[2] * vX + matrix[6] * vY + matrix[10] * vZ + matrix[14] * vW;\r\n  var w = matrix[3] * vX + matrix[7] * vY + matrix[11] * vZ + matrix[15] * vW;\r\n\r\n  result.x = x;\r\n  result.y = y;\r\n  result.z = z;\r\n  result.w = w;\r\n  return result;\r\n}\r\n\r\nfunction cartographicToCartesian(cartographic) {\r\n  var result = new Object();\r\n\r\n  var n = new Object();\r\n  var k = new Object();\r\n\r\n  var longitude = cartographic.longitude;\r\n  var latitude = cartographic.latitude;\r\n  var cosLatitude = Math.cos(latitude);\r\n\r\n  var x = cosLatitude * Math.cos(longitude);\r\n  var y = cosLatitude * Math.sin(longitude);\r\n  var z = Math.sin(latitude);\r\n\r\n  n.x = x;\r\n  n.y = y;\r\n  n.z = z;\r\n  normalize(n, n);\r\n\r\n  var radiiSquared = new Object();\r\n  radiiSquared.x = 6378137.0 * 6378137.0;\r\n  radiiSquared.y = 6378137.0 * 6378137.0;\r\n  radiiSquared.z = 6356752.314145179 * 6356752.314145179;\r\n\r\n  multiplyComponents(radiiSquared, n, k);\r\n  var gamma = Math.sqrt(dot(n, k));\r\n  divideByScalar(k, gamma, k);\r\n  multiplyByScalar(n, cartographic.height, n);\r\n\r\n  add(k, n, result);\r\n\r\n  return result;\r\n}\r\n\r\nfunction random(min, max) {\r\n  var Range = max - min;\r\n  var Rand = Math.random();\r\n  var num = min + Math.round(Rand * Range);\r\n  return num;\r\n}\r\n\r\nfunction randomParticle(primitive, currentParticle) {\r\n  currentParticle.age = Math.round(random(0.0, primitive._numCurrentPoint - 1));\r\n\r\n  currentParticle.pos = new Object();\r\n  currentParticle.pos.x = random(0.0, primitive._currentData.depthLength - 1);\r\n  currentParticle.pos.y = random(primitive._currentMinLat, primitive._currentMaxLat);\r\n  currentParticle.pos.z = random(primitive._currentMinLon, primitive._currentMaxLon);\r\n\r\n  currentParticle.dir = new Object();\r\n\r\n  currentParticle.lastTime = -1;\r\n  currentParticle.firstTime = true;\r\n}\r\n\r\nvar scratchDir = { x: 0, y: 0, z: 0 };\r\nvar scratchUp = { x: 0, y: 0, z: 0 };\r\nvar scratchNorth = { x: 0, y: 0, z: 0 };\r\nvar scratchRight = { x: 0, y: 0, z: 0, w: 0 };\r\nvar scratchLeft = { x: 0, y: 0, z: 0, w: 0 };\r\nvar scratchTranslationMatrix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\nvar left = { x: 0, y: 0, z: 0, w: 0 };\r\nvar right = { x: 0, y: 0, z: 0, w: 0 };\r\nvar scratchCartesian3 = { x: 0, y: 0, z: 0 };\r\nvar scratchPosition = { x: 0, y: 0, z: 0 };\r\nvar scratchPrevPosition = { x: 0, y: 0, z: 0 };\r\nvar scratchNextPosition = { x: 0, y: 0, z: 0 };\r\n\r\nfunction FeCreateFlightLine(parameters, transferableObjects) {\r\n  var primitive = parameters;\r\n  var vertexPositions = primitive.positions;\r\n  var flightWidth = primitive.flightWidth;\r\n  var warningLineHeight = primitive.warningLineHeight;\r\n  var dangerLineHeight = primitive.dangerLineHeight;\r\n  //var warningDataFlag = primitive.warningDataFlag;\r\n  //var flightDataFlag = primitive.flightDataFlag;\r\n  var flightPointNum = 0;\r\n  var slopePointNum = 0;\r\n  var vertexIndexNum = 0;\r\n  var lineVertexIndexNum = 0;\r\n\r\n  //航线、剖面\r\n  var posArr = primitive.vertexArray;\r\n  var colorType = primitive.colorTypeArray;\r\n  var indexArr = primitive.indexArray;\r\n  var posIndex = 0;\r\n  var colorIndex = 0;\r\n  var index = 0;\r\n  var allVertexNum = 0;\r\n\r\n  //等高线\r\n  var linePosArr = primitive.lineVertexArray;\r\n  var lineIndexArr = primitive.lineIndexArray;\r\n  var lineColorType = primitive.lineColorType;\r\n  var linePosIndex = 0;\r\n  var lineColorIndex = 0;\r\n  var lineIndex = 0;\r\n  var allLineVertexNum = 0;\r\n\r\n  var positionArr = vertexPositions;\r\n  var count = positionArr.length;\r\n  for (var j = 0; j < count; ++j) {\r\n    var positions = positionArr[j];\r\n    var length = positions.length;\r\n    //航线顶点\r\n    var vertexFlightCount = 0;\r\n    var vertexSlopeCount = 0;\r\n    var lineVertexCount = 0;\r\n    for (var i = 0; i < length; ++i) {\r\n      var position = positions[i];\r\n      //if( flightDataFlag ){\r\n      var worldPos = LLHToCartesian(position[0], position[1], position[2]);\r\n      scratchTranslationMatrix = fromTranslation(worldPos, scratchTranslationMatrix);\r\n      normalize(worldPos, scratchUp);\r\n      if (i < length - 1) {\r\n        var nextPosition = positions[i + 1];\r\n        scratchDir = LLHToCartesian(nextPosition[0], nextPosition[1], nextPosition[2]);\r\n        subtract(scratchDir, worldPos, scratchDir);\r\n      } else {\r\n        var lastPosition = positions[i - 1];\r\n        scratchDir = LLHToCartesian(lastPosition[0], lastPosition[1], lastPosition[2]);\r\n        subtract(worldPos, scratchDir, scratchDir);\r\n      }\r\n\r\n      normalize(scratchDir, scratchDir);\r\n      cross(scratchUp, scratchDir, scratchNorth);\r\n\r\n      clone(scratchNorth, scratchRight);\r\n      scratchRight.w = 1.0;\r\n      negate(scratchRight, scratchLeft);\r\n      scratchLeft.w = 1.0;\r\n\r\n      multiplyByScalar(scratchLeft, flightWidth, scratchLeft);\r\n      left = multiplyByVector(scratchTranslationMatrix, scratchLeft, left);\r\n\r\n      multiplyByScalar(scratchRight, flightWidth, scratchRight);\r\n      right = multiplyByVector(scratchTranslationMatrix, scratchRight, right);\r\n\r\n      //航线\r\n      posArr[posIndex++] = left.x;\r\n      posArr[posIndex++] = left.y;\r\n      posArr[posIndex++] = left.z;\r\n      posArr[posIndex++] = right.x;\r\n      posArr[posIndex++] = right.y;\r\n      posArr[posIndex++] = right.z;\r\n\r\n\r\n      colorType[colorIndex++] = 1.0;\r\n      colorType[colorIndex++] = 0.0;\r\n      colorType[colorIndex++] = 1.0;\r\n      colorType[colorIndex++] = 0.0;\r\n\r\n      flightPointNum += 2;\r\n      vertexFlightCount += 2;\r\n      //}\r\n\r\n      //警戒线\r\n      //if( warningDataFlag ){\r\n      var posWarning = LLHToCartesian(position[0], position[1], warningLineHeight);\r\n      linePosArr[linePosIndex++] = posWarning.x;\r\n      linePosArr[linePosIndex++] = posWarning.y;\r\n      linePosArr[linePosIndex++] = posWarning.z;\r\n      lineColorType[lineColorIndex++] = 2.0;\r\n      lineColorType[lineColorIndex++] = 0.0;\r\n\r\n      lineVertexCount += 1;\r\n      //}\t\r\n    }\r\n    //剖面顶点\r\n    for (var n = 0; n < length; ++n) {\r\n\r\n      var slopePosition = positions[n];\r\n      //if( flightDataFlag ){\r\n      var worldUpPos = LLHToCartesian(slopePosition[0], slopePosition[1], Math.abs(slopePosition[2] - 0.5));\r\n      var worldDownPos = LLHToCartesian(slopePosition[0], slopePosition[1], 0.0);\r\n\r\n      //剖面\r\n      posArr[posIndex++] = worldUpPos.x;\r\n      posArr[posIndex++] = worldUpPos.y;\r\n      posArr[posIndex++] = worldUpPos.z;\r\n      posArr[posIndex++] = worldDownPos.x;\r\n      posArr[posIndex++] = worldDownPos.y;\r\n      posArr[posIndex++] = worldDownPos.z;\r\n\r\n      colorType[colorIndex++] = 0.0;\r\n      colorType[colorIndex++] = 1.0;\r\n      colorType[colorIndex++] = 0.0;\r\n      colorType[colorIndex++] = 1.0;\r\n\r\n      slopePointNum += 2;\r\n      vertexSlopeCount += 2;\r\n      //}\r\n      //危险线\r\n      //if( warningDataFlag ){\r\n      var posDanger = LLHToCartesian(slopePosition[0], slopePosition[1], dangerLineHeight);\r\n      linePosArr[linePosIndex++] = posDanger.x;\r\n      linePosArr[linePosIndex++] = posDanger.y;\r\n      linePosArr[linePosIndex++] = posDanger.z;\r\n      lineColorType[lineColorIndex++] = 3.0;\r\n      lineColorType[lineColorIndex++] = 0.0;\r\n      //}\r\n    }\r\n    //航线顶点索引\r\n    //if( flightDataFlag ){\r\n    var triFlightNum = vertexFlightCount - 2;\r\n    for (var m = 0; m < triFlightNum; ++m) {\r\n      if (m % 2 === 0) {\r\n        indexArr[index++] = m + allVertexNum;\r\n        indexArr[index++] = m + 1 + allVertexNum;\r\n        indexArr[index++] = m + 2 + allVertexNum;\r\n        vertexIndexNum += 3;\r\n      } else {\r\n        m\r\n        indexArr[index++] = m + 1 + allVertexNum;\r\n        indexArr[index++] = m + allVertexNum;\r\n        indexArr[index++] = m + 2 + allVertexNum;\r\n        vertexIndexNum += 3;\r\n      }\r\n    }\r\n    allVertexNum += vertexFlightCount;\r\n\r\n    //剖面顶点索引\r\n    var triSlopeNum = vertexSlopeCount - 2;\r\n    for (var m = 0; m < triSlopeNum; ++m) {\r\n\r\n      if (m % 2 === 0) {\r\n        indexArr[index++] = m + allVertexNum;\r\n        indexArr[index++] = m + 1 + allVertexNum;\r\n        indexArr[index++] = m + 2 + allVertexNum;\r\n        vertexIndexNum += 3;\r\n      } else {\r\n        indexArr[index++] = m + 1 + allVertexNum;\r\n        indexArr[index++] = m + allVertexNum;\r\n        indexArr[index++] = m + 2 + allVertexNum;\r\n        vertexIndexNum += 3;\r\n      }\r\n    }\r\n    allVertexNum += vertexSlopeCount;\r\n    //}\r\n    //线顶点索引\r\n    //if( warningDataFlag ){\r\n    for (var m = 0; m < lineVertexCount - 1; ++m) {\r\n      lineIndexArr[lineIndex++] = m + allLineVertexNum;\r\n      lineIndexArr[lineIndex++] = m + 1 + allLineVertexNum;\r\n      lineVertexIndexNum += 2;\r\n    }\r\n    allLineVertexNum += lineVertexCount;\r\n\r\n    for (var m = 0; m < lineVertexCount - 1; ++m) {\r\n      lineIndexArr[lineIndex++] = m + allLineVertexNum;\r\n      lineIndexArr[lineIndex++] = m + 1 + allLineVertexNum;\r\n      lineVertexIndexNum += 2;\r\n    }\r\n    allLineVertexNum += lineVertexCount;\r\n    //}\r\n  }\r\n\r\n  //航线信息\r\n  var vertexNum = posArr.length / 3;\r\n  var vertexInfo = new Object();\r\n\r\n  //if( flightDataFlag ){\r\n  /*vertexInfo.vertexArray = new Float32Array(posArr);\r\n  vertexInfo.colorTypeArray = new Float32Array(colorType);\r\n  vertexInfo.indexArray = new Uint32Array(indexArr);*/\r\n  vertexInfo.vertexArray = posArr;\r\n  vertexInfo.colorTypeArray = colorType;\r\n  vertexInfo.indexArray = indexArr;\r\n  vertexInfo.vertexIndexNum = vertexIndexNum;\r\n  //}\r\n\r\n  //线信息\r\n  //if( warningDataFlag ){\r\n  /*vertexInfo.lineVertexArray = new Float32Array(linePosArr);\r\n  vertexInfo.lineColorType = new Float32Array(lineColorType);\r\n  vertexInfo.lineIndexArray = new Uint32Array(lineIndexArr);*/\r\n  vertexInfo.lineVertexArray = linePosArr;\r\n  vertexInfo.lineColorType = lineColorType;\r\n  vertexInfo.lineIndexArray = lineIndexArr;\r\n  vertexInfo.lineVertexIndexNum = lineVertexIndexNum;\r\n  //}\r\n\r\n  return vertexInfo;\r\n};\r\nexport default createTaskProcessorWorker(FeCreateFlightLine);"],"names":[],"mappings":"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"}