{"version":3,"file":"FeCreateVerticalLine.js","sources":["../../../../Source/WorkersES6/FeCreateVerticalLine.js"],"sourcesContent":["import createTaskProcessorWorker from \"./createTaskProcessorWorker.js\";\r\n\r\nfunction clampBetween(v, min, max) {\r\n  if (v <= min)\r\n    v = min;\r\n\r\n  if (v >= max)\r\n    v = max;\r\n\r\n  return v;\r\n}\r\n\r\nfunction equivalent(a, b) {\r\n  if (Math.abs(a - b) < 0.00001)\r\n    return true;\r\n  else\r\n    return false;\r\n}\r\n\r\nfunction toRadians(d) {\r\n  return d * (Math.PI / 180.0);\r\n}\r\n\r\nfunction magnitude(cartesian) {\r\n  return Math.sqrt(cartesian.x * cartesian.x + cartesian.y * cartesian.y + cartesian.z * cartesian.z);\r\n}\r\n\r\nfunction normalize(cartesian, result) {\r\n  var mag = magnitude(cartesian);\r\n\r\n  result.x = cartesian.x / mag;\r\n  result.y = cartesian.y / mag;\r\n  result.z = cartesian.z / mag;\r\n}\r\n\r\nfunction multiplyComponents(left, right, result) {\r\n  result.x = left.x * right.x;\r\n  result.y = left.y * right.y;\r\n  result.z = left.z * right.z;\r\n}\r\n\r\nfunction dot(left, right) {\r\n  return left.x * right.x + left.y * right.y + left.z * right.z;\r\n}\r\n\r\nfunction divideByScalar(cartesian, scalar, result) {\r\n  result.x = cartesian.x / scalar;\r\n  result.y = cartesian.y / scalar;\r\n  result.z = cartesian.z / scalar;\r\n  return result;\r\n};\r\n\r\nfunction multiplyByScalar(cartesian, scalar, result) {\r\n  result.x = cartesian.x * scalar;\r\n  result.y = cartesian.y * scalar;\r\n  result.z = cartesian.z * scalar;\r\n  return result;\r\n};\r\n\r\nfunction add(left, right, result) {\r\n  result.x = left.x + right.x;\r\n  result.y = left.y + right.y;\r\n  result.z = left.z + right.z;\r\n  return result;\r\n};\r\n\r\nfunction subtract(left, right, result) {\r\n  result.x = left.x - right.x;\r\n  result.y = left.y - right.y;\r\n  result.z = left.z - right.z;\r\n  return result;\r\n}\r\n\r\nfunction cross(left, right, result) {\r\n\r\n  var leftX = left.x;\r\n  var leftY = left.y;\r\n  var leftZ = left.z;\r\n  var rightX = right.x;\r\n  var rightY = right.y;\r\n  var rightZ = right.z;\r\n\r\n  var x = leftY * rightZ - leftZ * rightY;\r\n  var y = leftZ * rightX - leftX * rightZ;\r\n  var z = leftX * rightY - leftY * rightX;\r\n\r\n  result.x = x;\r\n  result.y = y;\r\n  result.z = z;\r\n  return result;\r\n};\r\n\r\nfunction clone(left, result) {\r\n  result.x = left.x;\r\n  result.y = left.y;\r\n  result.z = left.z;\r\n  return result;\r\n}\r\n\r\nfunction negate(left, result) {\r\n  result.x = -left.x;\r\n  result.y = -left.y;\r\n  result.z = -left.z;\r\n  return result;\r\n}\r\n\r\nfunction magnitudeSquared(cartesian) {\r\n  return cartesian.x * cartesian.x + cartesian.y * cartesian.y + cartesian.z * cartesian.z;\r\n};\r\n\r\nfunction checkPointVisible(primitive, pos) {\r\n  if (magnitudeSquared(pos) < 1)\r\n    return false;\r\n\r\n  var posDir = new Object();\r\n  posDir.x = pos.x;\r\n  posDir.y = pos.y;\r\n  posDir.z = pos.z;\r\n  normalize(posDir, posDir);\r\n\r\n  var camDir = new Object();\r\n  camDir.x = primitive._camPosition.x;\r\n  camDir.y = primitive._camPosition.y;\r\n  camDir.z = primitive._camPosition.z;\r\n  normalize(camDir, camDir);\r\n\r\n  var d = dot(posDir, camDir);\r\n  d = clampBetween(d, -1, 1);\r\n\r\n  var angle = Math.acos(d);\r\n\r\n  if (angle > primitive._visibleAngle)\r\n    return false;\r\n  else\r\n    return true;\r\n}\r\n\r\nfunction LLHToCartesian(lon, lat, height) {\r\n  var cartographic = new Object();\r\n  cartographic.longitude = lon * Math.PI / 180.0;\r\n  cartographic.latitude = lat * Math.PI / 180.0;\r\n  cartographic.height = height;\r\n\r\n  return cartographicToCartesian(cartographic);\r\n}\r\n\r\nfunction fromTranslation(cartesian, result) {\r\n  result[0] = 1.0;\r\n  result[1] = 0.0;\r\n  result[2] = 0.0;\r\n  result[3] = 0.0;\r\n  result[4] = 0.0;\r\n  result[5] = 1.0;\r\n  result[6] = 0.0;\r\n  result[7] = 0.0;\r\n  result[8] = 0.0;\r\n  result[9] = 0.0;\r\n  result[10] = 1.0;\r\n  result[11] = 0.0;\r\n  result[12] = cartesian.x;\r\n  result[13] = cartesian.y;\r\n  result[14] = cartesian.z;\r\n  result[15] = 1.0;\r\n  return result;\r\n}\r\n\r\nfunction multiplyByVector(matrix, cartesian, result) {\r\n  var vX = cartesian.x;\r\n  var vY = cartesian.y;\r\n  var vZ = cartesian.z;\r\n  var vW = cartesian.w;\r\n\r\n  var x = matrix[0] * vX + matrix[4] * vY + matrix[8] * vZ + matrix[12] * vW;\r\n  var y = matrix[1] * vX + matrix[5] * vY + matrix[9] * vZ + matrix[13] * vW;\r\n  var z = matrix[2] * vX + matrix[6] * vY + matrix[10] * vZ + matrix[14] * vW;\r\n  var w = matrix[3] * vX + matrix[7] * vY + matrix[11] * vZ + matrix[15] * vW;\r\n\r\n  result.x = x;\r\n  result.y = y;\r\n  result.z = z;\r\n  result.w = w;\r\n  return result;\r\n}\r\n\r\nfunction cartographicToCartesian(cartographic) {\r\n  var result = new Object();\r\n\r\n  var n = new Object();\r\n  var k = new Object();\r\n\r\n  var longitude = cartographic.longitude;\r\n  var latitude = cartographic.latitude;\r\n  var cosLatitude = Math.cos(latitude);\r\n\r\n  var x = cosLatitude * Math.cos(longitude);\r\n  var y = cosLatitude * Math.sin(longitude);\r\n  var z = Math.sin(latitude);\r\n\r\n  n.x = x;\r\n  n.y = y;\r\n  n.z = z;\r\n  normalize(n, n);\r\n\r\n  var radiiSquared = new Object();\r\n  radiiSquared.x = 6378137.0 * 6378137.0;\r\n  radiiSquared.y = 6378137.0 * 6378137.0;\r\n  radiiSquared.z = 6356752.314145179 * 6356752.314145179;\r\n\r\n  multiplyComponents(radiiSquared, n, k);\r\n  var gamma = Math.sqrt(dot(n, k));\r\n  divideByScalar(k, gamma, k);\r\n  multiplyByScalar(n, cartographic.height, n);\r\n\r\n  add(k, n, result);\r\n\r\n  return result;\r\n}\r\n\r\nfunction random(min, max) {\r\n  var Range = max - min;\r\n  var Rand = Math.random();\r\n  var num = min + Math.round(Rand * Range);\r\n  return num;\r\n}\r\n\r\nfunction randomParticle(primitive, currentParticle) {\r\n  currentParticle.age = Math.round(random(0.0, primitive._numCurrentPoint - 1));\r\n\r\n  currentParticle.pos = new Object();\r\n  currentParticle.pos.x = random(0.0, primitive._currentData.depthLength - 1);\r\n  currentParticle.pos.y = random(primitive._currentMinLat, primitive._currentMaxLat);\r\n  currentParticle.pos.z = random(primitive._currentMinLon, primitive._currentMaxLon);\r\n\r\n  currentParticle.dir = new Object();\r\n\r\n  currentParticle.lastTime = -1;\r\n  currentParticle.firstTime = true;\r\n}\r\n\r\nvar scratchDir = { x: 0, y: 0, z: 0 };\r\nvar scratchUp = { x: 0, y: 0, z: 0 };\r\nvar scratchNorth = { x: 0, y: 0, z: 0 };\r\nvar scratchRight = { x: 0, y: 0, z: 0, w: 0 };\r\nvar scratchLeft = { x: 0, y: 0, z: 0, w: 0 };\r\nvar scratchTranslationMatrix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\nvar left = { x: 0, y: 0, z: 0, w: 0 };\r\nvar right = { x: 0, y: 0, z: 0, w: 0 };\r\nvar scratchCartesian3 = { x: 0, y: 0, z: 0 };\r\nvar scratchPosition = { x: 0, y: 0, z: 0 };\r\nvar scratchPrevPosition = { x: 0, y: 0, z: 0 };\r\nvar scratchNextPosition = { x: 0, y: 0, z: 0 };\r\nvar tPos = { x: 0, y: 0, z: 0 };\r\n\r\nfunction FeCreateVerticalLine(parameters, transferableObjects) {\r\n  var primitive = event.data;\r\n  var vertexPositions = primitive.positions;\r\n  var width = primitive.lineWidth;\r\n  //垂线\r\n  var finalPositions = primitive.finalPositions;\r\n  var prevPositions = primitive.prevPositions;\r\n  var nextPositions = primitive.nextPositions;\r\n  var expandAndWidth = primitive.expandAndWidth;\r\n  var expandAndWidthIndex = 0;\r\n  var verticalVertexNum = 0;\r\n  var verticalIndexArr = primitive.verticalIndexArray;\r\n  var verticalIndex = 0;\r\n  var verticalIndexNum = 0;\r\n  var finalIndex = 0;\r\n  var prevIndex = 0;\r\n  var nextIndex = 0;\r\n\r\n  var positionArr = vertexPositions;\r\n  var count = positionArr.length;\r\n  for (var j = 0; j < count; ++j) {\r\n    var positions = positionArr[j];\r\n    var length = positions.length;\r\n    //剖面顶点\r\n    for (var n = 0; n < length; ++n) {\r\n      var slopePosition = positions[n];\r\n      var worldUpPos = LLHToCartesian(slopePosition[0], slopePosition[1], slopePosition[2]);\r\n      var worldDownPos = LLHToCartesian(slopePosition[0], slopePosition[1], 0.0);\r\n      //垂线\r\n      if (n === 0 || (n === length - 1) || (n % 100) === 0) {\r\n        var size = 2.0 * 4.0 - 4.0;\r\n        //var tPos;\r\n        for (var h = 0; h < 2; ++h) {\r\n          if (h === 0) {\r\n            tPos = scratchCartesian3;\r\n            subtract(worldUpPos, worldDownPos, tPos);\r\n            add(worldUpPos, tPos, tPos);\r\n          } else {\r\n            tPos = worldUpPos;\r\n          }\r\n\r\n          clone(tPos, scratchPrevPosition);\r\n          if (h === 0) {\r\n            clone(worldUpPos, scratchPosition);\r\n          } else {\r\n            clone(worldDownPos, scratchPosition);\r\n          }\r\n\r\n          if (h === 1) {\r\n            tPos = scratchCartesian3;\r\n            subtract(worldDownPos, worldUpPos, tPos);\r\n            add(worldDownPos, tPos, tPos);\r\n          } else {\r\n            tPos = worldDownPos;\r\n          }\r\n          clone(tPos, scratchNextPosition);\r\n\r\n          var startK = h === 0 ? 2 : 0;\r\n          var endK = h === 1 ? 2 : 4;\r\n          for (var k = startK; k < endK; ++k) {\r\n            finalPositions[finalIndex++] = scratchPosition.x;\r\n            finalPositions[finalIndex++] = scratchPosition.y;\r\n            finalPositions[finalIndex++] = scratchPosition.z;\r\n\r\n            prevPositions[prevIndex++] = scratchPrevPosition.x;\r\n            prevPositions[prevIndex++] = scratchPrevPosition.y;\r\n            prevPositions[prevIndex++] = scratchPrevPosition.z;\r\n\r\n            nextPositions[nextIndex++] = scratchNextPosition.x;\r\n            nextPositions[nextIndex++] = scratchNextPosition.y;\r\n            nextPositions[nextIndex++] = scratchNextPosition.z;\r\n\r\n            var direction = (k - 2 < 0) ? -1.0 : 1.0;\r\n            expandAndWidth[expandAndWidthIndex++] = 2 * (k % 2) - 1;\r\n            expandAndWidth[expandAndWidthIndex++] = direction * width;\r\n            verticalVertexNum++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //航线信息\r\n  var vertexInfo = new Object();\r\n  //垂线\r\n  var verticalNum = verticalVertexNum / 4;\r\n  for (var v = 0; v < verticalNum; ++v) {\r\n    verticalIndexArr[verticalIndex++] = v * 4 + 0;\r\n    verticalIndexArr[verticalIndex++] = v * 4 + 2;\r\n    verticalIndexArr[verticalIndex++] = v * 4 + 1;\r\n\r\n    verticalIndexArr[verticalIndex++] = v * 4 + 1;\r\n    verticalIndexArr[verticalIndex++] = v * 4 + 2;\r\n    verticalIndexArr[verticalIndex++] = v * 4 + 3;\r\n    verticalIndexNum += 6;\r\n  }\r\n\r\n  vertexInfo.finalPositions = finalPositions;\r\n  vertexInfo.prevPositions = prevPositions;\r\n  vertexInfo.nextPositions = nextPositions;\r\n  vertexInfo.expandAndWidth = expandAndWidth;\r\n  vertexInfo.verticalIndexArray = verticalIndexArr;\r\n  vertexInfo.verticalIndexNum = verticalIndexNum;\r\n  return vertexInfo;\r\n};\r\nexport default createTaskProcessorWorker(FeCreateVerticalLine);"],"names":[],"mappings":"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"}